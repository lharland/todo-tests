In the root of the project, run the test using this:
npx playwright test --ui

The above command opens the GUI of playwright and click the Run all button above the test files.
It will also look for tests inside the tests/ folder.

Disclaimer: There is also a fully written file generated by Playwright in test-examples. 
But some of the locators are different.

===== Acceptance Criteria

Scenario: The user can add todos 
Given the user is on the landing page
When the user adds the "Task 1" todo to the list of todos
Then the todo lists shows "Task 1" newly created under the todo list
And the "Task 1" todo appears in the "All" and "Active" filter
And the "Task 1" todo does not appear in the "Completed" filter

Scenario: The user can delete completed todos 
When the user clears the completed todos
Then the "Task 1" todo appears in the "All" and "Active" filter
And there are "0" items in "Completed" todos

Scenario: The user can complete his todos
When the user marks "Task 1" as completed
Then the "Task 1" todo appears in the "All" and "Completed" filter
And the "Task 1" todo does not appear in the "Active" filter
Then the "Task 1" status becomes completed
And there are "0" remaining items that needs to be done in "All" and "Active" and "Completed" todos

Scenario: The user can put his todos back to active
When the user unmarks "Task 1" as completed
Then there are "1" remaining items that needs to be done in "All" and "Active" and "Completed" todos

Scenario: The user can edit the todo
Given the user edits the ''Task 1" todo 
Then the "Task 1" todo becomes editable
When the user exits from the current edited todo
Then the "Task 1" todo becomes not editable

Scenerio: Testing boundary values
Given the user views the "Completed" todos
When the user marks all items as completed
And the user clears the completed todos
Then the todo list is not displayed to the user


===== Implementation Strategy
I have chosen to write the Acceptance Criteria using GWT or Gherkin protocol. It is also suitable for preparation in writing a feature file.
The open source library can be swapped out easily and it does not have to be Playwright, although the GUI was handy at the point of tests verification.
The main bulk of testing is checking the list whether it is storing the todos properly as per how the app stores them in the session.
List operations including add, edit and delete.
Input operations as user is interacting with the edit text to input the todos to do.
Visual changes should be reflected, the number of items being updated as the list changes, the status of each line item, status filter of the todos etc.


